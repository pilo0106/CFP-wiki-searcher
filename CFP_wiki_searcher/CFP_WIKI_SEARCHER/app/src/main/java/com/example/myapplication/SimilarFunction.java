package com.example.myapplication;

import java.util.ArrayList;

public class SimilarFunction {
    int size = 23;
    double matrix[][] = {
            {1.0, 0.98173662, 0.68933324, 0.80035118, 0.98373677, 0.78273207, 0.77634689, 0.97144485, 0.98471607, 0.73054989, 0.86349626, 0.86426865, 0.84071924, 0.8423062, 0.84814314, 0.84974545, 0.86104742, 0.84799347, 0.86327909, 0.7910186, 0.68639156, 0.3700115, 0.37489404},
            {0.98173662, 1.0, 0.71334808, 0.85474504, 0.98311594, 0.83279944, 0.82870715, 0.98499789, 0.98824161, 0.75122403, 0.89143092, 0.89206405, 0.8660757, 0.86740925, 0.87033282, 0.87168288, 0.89324131, 0.88684852, 0.88414461, 0.83242856, 0.71383184, 0.35476907, 0.35984054},
            {0.68933324, 0.71334808, 1.0, 0.62474995, 0.71105093, 0.65956664, 0.66640231, 0.71128126, 0.69659932, 0.9814961, 0.67061392, 0.67123186, 0.67855604, 0.67984136, 0.70310164, 0.70441382, 0.70424999, 0.60443042, 0.65215243, 0.59384692, 0.45570397, 0.1390739, 0.14904219},
            {0.80035118, 0.85474504, 0.62474995, 1.0, 0.81547681, 0.97261076, 0.96853059, 0.86676065, 0.83698149, 0.67432254, 0.94657057, 0.94680109, 0.92220434, 0.92280642, 0.92114381, 0.92176819, 0.92722356, 0.86872681, 0.91429899, 0.94634153, 0.76728108, 0.16872733, 0.17172303},
            {0.98373677, 0.98311594, 0.71105093, 0.81547681, 1.0, 0.79909189, 0.79527692, 0.97664372, 0.98145555, 0.75051844, 0.86507838, 0.86567554, 0.84676451, 0.84803156, 0.85144176, 0.85272577, 0.8742167, 0.87256736, 0.8641023, 0.79689915, 0.65161202, 0.35020478, 0.35517569},
            {0.78273207, 0.83279944, 0.65956664, 0.97261076, 0.79909189, 1.0, 0.9991273, 0.8530049, 0.82288309, 0.70498011, 0.92665581, 0.9268458, 0.92365482, 0.92419417, 0.92617858, 0.92674377, 0.92048698, 0.824892, 0.89653717, 0.94823619, 0.73041391, 0.11495756, 0.11808763},
            {0.77634689, 0.82870715, 0.66640231, 0.96853059, 0.79527692, 0.9991273, 1.0, 0.84892193, 0.8178497, 0.7105852, 0.92270934, 0.92285151, 0.9233534, 0.92380638, 0.92516866, 0.92564788, 0.91776051, 0.82119173, 0.89367621, 0.94518674, 0.72497984, 0.10663715, 0.10956694},
            {0.97144485, 0.98499789, 0.71128126, 0.86676065, 0.97664372, 0.8530049, 0.84892193, 1.0, 0.99434411, 0.75946562, 0.90058549, 0.90083637, 0.88016746, 0.88080068, 0.88508551, 0.885744, 0.9081126, 0.90043924, 0.9050396, 0.84424728, 0.67763763, 0.31497622, 0.32029625},
            {0.98471607, 0.98824161, 0.69659932, 0.83698149, 0.98145555, 0.82288309, 0.8178497, 0.99434411, 1.0, 0.74566109, 0.88475084, 0.88521908, 0.86257044, 0.8636005, 0.86852899, 0.86958015, 0.89140068, 0.88527882, 0.89388804, 0.8227425, 0.66759503, 0.348098, 0.35315457},
            {0.73054989, 0.75122403, 0.9814961, 0.67432254, 0.75051844, 0.70498011, 0.7105852, 0.75946562, 0.74566109, 1.0, 0.70635362, 0.7069338, 0.71004828, 0.711268, 0.7381288, 0.73937989, 0.74809168, 0.66613175, 0.700143, 0.63124306, 0.47337373, 0.15304459, 0.16138048},
            {0.86349626, 0.89143092, 0.67061392, 0.94657057, 0.86507838, 0.92665581, 0.92270934, 0.90058549, 0.88475084, 0.70635362, 1.0, 0.99998073, 0.96827348, 0.96841965, 0.97040011, 0.97057763, 0.98119346, 0.8865184, 0.97240676, 0.94941722, 0.79696696, 0.16407004, 0.16790603},
            {0.86426865, 0.89206405, 0.67123186, 0.94680109, 0.86567554, 0.9268458, 0.92285151, 0.90083637, 0.88521908, 0.7069338, 0.99998073, 1.0, 0.96811703, 0.96833427, 0.970227, 0.97047478, 0.98121562, 0.88732856, 0.97217575, 0.94988277, 0.79819692, 0.16752534, 0.17135372},
            {0.84071924, 0.8660757, 0.67855604, 0.92220434, 0.84676451, 0.92365482, 0.9233534, 0.88016746, 0.86257044, 0.71004828, 0.96827348, 0.96811703, 1.0, 0.99993443, 0.99423256, 0.99419554, 0.96141245, 0.85807076, 0.96186314, 0.94420728, 0.75719891, 0.12458148, 0.12728276},
            {0.8423062, 0.86740925, 0.67984136, 0.92280642, 0.84803156, 0.92419417, 0.92380638, 0.88080068, 0.8636005, 0.711268, 0.96841965, 0.96833427, 0.99993443, 1.0, 0.99413066, 0.9942233, 0.96164033, 0.85972791, 0.96162865, 0.94525855, 0.75960435, 0.13096676, 0.13365392},
            {0.84814314, 0.87033282, 0.70310164, 0.92114381, 0.85144176, 0.92617858, 0.92516866, 0.88508551, 0.86852899, 0.7381288, 0.97040011, 0.970227, 0.99423256, 0.99413066, 1.0, 0.9999359, 0.96454976, 0.86342584, 0.96292273, 0.94139343, 0.75794141, 0.11310112, 0.11668567},
            {0.84974545, 0.87168288, 0.70441382, 0.92176819, 0.85272577, 0.92674377, 0.92564788, 0.885744, 0.86958015, 0.73937989, 0.97057763, 0.97047478, 0.99419554, 0.9942233, 0.9999359, 1.0, 0.96480866, 0.86509651, 0.96272278, 0.94246135, 0.76034518, 0.11941045, 0.12298182},
            {0.86104742, 0.89324131, 0.70424999, 0.92722356, 0.8742167, 0.92048698, 0.91776051, 0.9081126, 0.89140068, 0.74809168, 0.98119346, 0.98121562, 0.96141245, 0.96164033, 0.96454976, 0.96480866, 1.0, 0.90244945, 0.97574659, 0.93732783, 0.75786562, 0.16984708, 0.17377988},
            {0.84799347, 0.88684852, 0.60443042, 0.86872681, 0.87256736, 0.824892, 0.82119173, 0.90043924, 0.88527882, 0.66613175, 0.8865184, 0.88732856, 0.85807076, 0.85972791, 0.86342584, 0.86509651, 0.90244945, 1.0, 0.89258458, 0.8820325, 0.74943516, 0.2891163, 0.29260211},
            {0.86327909, 0.88414461, 0.65215243, 0.91429899, 0.8641023, 0.89653717, 0.89367621, 0.9050396, 0.89388804, 0.700143, 0.97240676, 0.97217575, 0.96186314, 0.96162865, 0.96292273, 0.96272278, 0.97574659, 0.89258458, 1.0, 0.91901919, 0.74581479, 0.16885842, 0.17203464},
            {0.7910186, 0.83242856, 0.59384692, 0.94634153, 0.79689915, 0.94823619, 0.94518674, 0.84424728, 0.8227425, 0.63124306, 0.94941722, 0.94988277, 0.94420728, 0.94525855, 0.94139343, 0.94246135, 0.93732783, 0.8820325, 0.91901919, 1.0, 0.80487062, 0.16521101, 0.16723826},
            {0.68639156, 0.71383184, 0.45570397, 0.76728108, 0.65161202, 0.73041391, 0.72497984, 0.67763763, 0.66759503, 0.47337373, 0.79696696, 0.79819692, 0.75719891, 0.75960435, 0.75794141, 0.76034518, 0.75786562, 0.74943516, 0.74581479, 0.80487062, 1.0, 0.18911292, 0.19045264},
            {0.3700115, 0.35476907, 0.1390739, 0.16872733, 0.35020478, 0.11495756, 0.10663715, 0.31497622, 0.348098, 0.15304459, 0.16407004, 0.16752534, 0.12458148, 0.13096676, 0.11310112, 0.11941045, 0.16984708, 0.2891163, 0.16885842, 0.16521101, 0.18911292, 1.0, 0.99973582},
            {0.37489404, 0.35984054, 0.14904219, 0.17172303, 0.35517569, 0.11808763, 0.10956694, 0.32029625, 0.35315457, 0.16138048, 0.16790603, 0.17135372, 0.12728276, 0.13365392, 0.11668567, 0.12298182, 0.17377988, 0.29260211, 0.17203464, 0.16723826, 0.19045264, 0.99973582, 1.0}
    };
    int index;
    ArrayList<Integer> traversedList = new ArrayList<>();
    double focusOn[] = new double[size];
    SimilarFunction(int n){
        index = n;
    }
    public void addItem(int n){
        traversedList.add(n);
    }
    public void Structure(){
        for(int i = 0; i < size; i++){
            focusOn[i] = matrix[index][i];
        }
        for (Integer element : traversedList) {
            focusOn[element - 1] = -1.0;
        }
    }
    public int findNext(){
        int maxIndex = 0;
        double maxValue = focusOn[0];
        for (int i = 1; i < size; i++) {
            if (focusOn[i] > maxValue && focusOn[i] > 0.7) {
                maxValue = focusOn[i];
                maxIndex = i;
            }
        }
        return maxIndex+1;
    }
}
